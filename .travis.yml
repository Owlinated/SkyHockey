language: generic
os: linux # Jobs are on Linux unless specified otherwise
dist: trusty # Jobs are on Trusty unless specified otherwise
sudo: required # Required for conan installation
python: 3.6

# For updating, check: https://github.com/boostorg/hana/blob/master/.travis.yml
matrix:
  include:
    # Clang 4.0
    - env: CC=clang-4.0 CXX=clang++-4.0
      addons: { apt: { packages: ["clang-4.0"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-4.0"] } }

    # Clang 5.0
    - env: CC=clang-5.0 CXX=clang++-5.0
      addons: &defaults { apt: { packages: ["clang-5.0"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-5.0"] } }

    # GCC 6
    - env: CC=gcc-6 CXX=g++-6
      addons: { apt: { packages: ["g++-6"], sources: ["ubuntu-toolchain-r-test"] } }

    # GCC 7
    - env: CC=gcc-7 CXX=g++-7
      addons: { apt: { packages: ["g++-7"], sources: ["ubuntu-toolchain-r-test"] } }

    # Xcode 8.3
    - os: osx
      osx_image: xcode8.3

    # Xcode 9.1
    - os: osx
      osx_image: xcode9.1

install:
  ############################################################################
  # All the dependencies are installed in ${HOME}/deps/
  ############################################################################
  - DEPS_DIR="${HOME}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Install libc++ and libc++abi for clang
  ############################################################################
  - |
    if [[ "${CXX%%+*}" == "clang" ]]; then
      if [[ "${CXX}" == "clang++-4.0" ]]; then LLVM_VERSION="4.0.1";
      elif [[ "${CXX}" == "clang++-5.0" ]]; then LLVM_VERSION="5.0.1";
      fi
      LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
      LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
      LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
      mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi
      travis_retry wget -O - ${LLVM_URL} | tar --strip-components=1 -xJ -C llvm || exit 1
      travis_retry wget -O - ${LIBCXX_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxx || exit 1
      travis_retry wget -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxxabi || exit 1
      (cd llvm/build && cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_DIR}/llvm/install) || exit 1
      (cd llvm/build/projects/libcxx && make install -j2) || exit 1
      (cd llvm/build/projects/libcxxabi && make install -j2) || exit 1
      export CXXFLAGS="-isystem ${DEPS_DIR}/llvm/install/include/c++/v1"
      export LDFLAGS="-L ${DEPS_DIR}/llvm/install/lib -l c++ -l c++abi"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${DEPS_DIR}/llvm/install/lib"
    fi

  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.10/cmake-3.10.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
    fi
  - cmake --version

  ############################################################################
  # Install pip on osx
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
      sudo python get-pip.py
    fi

  ############################################################################
  # Setup conan and remote (User mode required for osx)
  ############################################################################
  - pip install --user conan
  - userbaseconan=$(python -c "import site; print(site.USER_BASE)")
  - $userbaseconan/bin/conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan True

  ############################################################################
  # Install conan packages. This might take a while, retry if necessary
  ############################################################################
  - cd "${TRAVIS_BUILD_DIR}/Engine"
  - travis_retry travis_wait 60 $userbaseconan/bin/conan install ./ --build

script:
  - cd "${TRAVIS_BUILD_DIR}/Engine"
  - cmake ./
  - cmake --build ./ --target Engine
